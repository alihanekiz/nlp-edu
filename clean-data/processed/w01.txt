system planning introduction office class content what expect class an introduction software engineering goal an introduction software process fundamental idea aspect software engineering type software system software engineering ethic source https terovesalainen creative common office class learning goal what learn outcome understand software engineering programming understand software process know general issue software engineering need deal be able distinguish different type software system be aware ethical rule respect software engineering source https harishs creative common office introduction professional software development programming side activity business people write spreadsheet hobbyist write program interest scientist write program process datum professional programming software specific business purpose information system cad system use someone apart developer maintain change time need engineering source https geralt creative common office introduction programming software engineering software program associate configuration file system documentation describe structure system user documentation describe use system website download recent product information update software engineer concerned develop software product software sell customer source https geralt creative common office introduction two kind software product generic product system sell open market word processor draw package project management tool etc also vertical application accounting system customize bespoke product commission customer build contractor control system electronic device system support particular business process etc source https geralt creative common office introduction two kind software product generic product developer control software specification the development company estimate client may need customize bespoke product customer develop software specification the client tell developer need but the distinction becoming increasingly blur now often generic product build base adapt requirement customer erp systems sap source https zerotolerance creative common office introduction software quality various aspect take account software behavior execute structure organization component documentation these software attribute response time understandability reliability security thing would expect software depend area application source https gdj creative common office software engineering software engineering discipline engineering discipline engineer make thing work apply theory method tool discover solution problem without theory work within organizational financial constraint different aspect software production not code project management activity development tool method theory support software production source https pavlofox creative common office software engineering software engineering discipline constraint get result within schedule budget deal compromise adapt organization more creative less formal approach may find appropriate method give circumstance effective case traditional approach may work setting people write program however spend much time wish program source https geralt creative common office software engineering importance software engineering important more individual rely advanced software system hence need trustworthy system it usually cheap long run use software engineering method technique rather code away note majority cost cost change software office source https creative common software engineering systematic approach a software process a software process sequence activity lead production software product the four fundamental activity software specification customer engineer define software constraint software design implementation software design program software validation software check requirement software evolution software modify source https geralt creative common office software engineer different type process different type system need different development process for example software aircraft need completely specify for system specification development may go hand hand activity may organized different way describe different level detail depend type software source https creative common office software engineering software engineering discipline computer science method underlie computer software system theory not always applicable large complex system system engineer all aspect development evolution complex system hardware development process design system deployment system specification integration source https geralt creative common office software engineering general issue software heterogeneity operate distribute system access different type device mobile phone challenge build flexible software business social change business society change technology challenge traditional se technique time consume security trust software intertwine aspect life web service challenge maintain information security office source https qimono creative common software engineering software engineering diversity a systematic approach take account cost schedule dependability issue implementation vary depend the organization develop software the type software the people involve process there universal method technique the type application may decide use source https geralt creative common office software engineering type application application run local computer do require network access cad programs photo manipulation include necessary functionality interactive application execute remote computer access user pc terminal may include large datum access update transaction system business system source https pixaline creative common office software engineering type application software control hardware device embed control system probably majority system mobile phone software software microwave software car batch processing system phone billing system salary payment system system process large batch data system source https creative common office software engineering type application entertainment system focus personal use usually game sort quality user interaction key system modelling simulation develop scientist engineer use model situation often computationally intensive require parallel system source https inspiredimage creative common office software engineering type application datum collection system collect data environment use set sensor often instal hostile environment inside engine remote location system system compose number software system some may generic spreadsheet program other may specifically write environment source https creative common office software engineering no clear boundary the boundary system blur a game mobile phone constraint phone software batch processing system often use conjunction system phone bill software engineering technique may different an embed control system car critical need extensive verification expensive recall car sale system often use iterative development approach system system usually need specify advance develop separately source https markusspiske creative common office software engineering software engineering fundamental but fundamental apply type software use manage understand development process clear idea produce produce software dependable perform efficiently it safe operate secure external attack software expectation understand manage use software requirement specification document make effective use exist resource reuse already develop component source https antrania creative common office software engineering software engineering web the web profound effect software engineering initially universally accessible information store around web start evolve more functionality add browser system start replace special purpose interface lead development new innovative service web browser improve run small program instead write software deploy pc deploy web server change upgrade software become cheap cost also save user interface development source https geralt creative common office software engineering software engineering web the next step web service software service web service deliver specific functionality web application integrate web service google translate link dynamic execute call allow update service software service saas bring entire program cloud email a compute cloud huge number link computer share many user user pay accord much use software often free finance advertising source https creative common office software engineering software engineering web change system engineering software reuse become dominant approach system specify advance rather develop iteratively user interface constrained capability web browser application interface still limit specially design interface pc progress however make ajax source https creative common office software engineering software ethic don evil software engineering carry within social legal framework the job involve responsibility beyond technical skill this include application standard morality software engineer lot office source https creative common software engineering software ethic standard may bind law confidentiality respect confidentiality employee client also confidentiality agreement sign competence accept work outside competence intellectual property aware intellectual property patent copyright computer misuse use technical skill misuse people computer game play dissemination virus etc a code conduct code ethic software engineering publish acm ieee source https creative common office summary what take away class software program program also include documentation the software process include activity involve software development the activity specification design implementation validation evolution part software process there many different type system require appropriate software engineering tool technique development the fundamental idea software engineering applicable type software system these fundamental include manage software process software dependability security requirement engineering software reuse software engineer responsibilitie engineer profession society they simply concern technical issue professional society publish code conduct set standard behavior expect member office thank attention office